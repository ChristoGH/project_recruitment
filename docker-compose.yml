services:
  rabbitmq:
    image: rabbitmq:3-management
    ports: ["5672:5672", "15672:15672"]
    environment:
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbitmq_management disable_stats -rabbitmq_management disable_stats_collection"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      retries: 5

  url_discovery:
    build:
      context: .
      dockerfile: docker/discovery.Dockerfile
    env_file: .env
    environment:
      RABBITMQ_HOST: rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports: ["8000:8000"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["python", "-m", "recruitment.services.discovery.url_discovery_service"]

  url_processing:
    build:
      context: .
      dockerfile: docker/processing.Dockerfile
    env_file: .env
    environment:
      RABBITMQ_HOST: rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - recruitment_data:/app/databases
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["python", "-m", "recruitment.services.processing.url_processing_service"]

volumes:
  recruitment_data:
  recruitment_logs:

networks:
  recruitment_network:
    driver: bridge 